{"version":3,"file":"components_ListPage_tsx-chunk.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AASA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAMA;AASA;AAEA","sources":["webpack:///./components/ListPage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  ListPageHeader,\n  ListPageBody,\n  ListPageCreate,\n  VirtualizedTable,\n  useK8sWatchResource,\n  useListPageFilter,\n  K8sResourceCommon,\n  ListPageFilter,\n  RowFilter,\n  TableData,\n  RowProps,\n  ResourceLink,\n  TableColumn,\n} from '@openshift-console/dynamic-plugin-sdk';\n\nconst columns: TableColumn<K8sResourceCommon>[] = [\n  {\n    title: 'Name',\n    id: 'name',\n  },\n  {\n    title: 'Namespace',\n    id: 'namespace',\n  },\n];\n\nconst PodRow: React.FC<RowProps<K8sResourceCommon>> = ({ obj, activeColumnIDs }) => {\n  return (\n    <>\n      <TableData id={columns[0].id} activeColumnIDs={activeColumnIDs}>\n        <ResourceLink kind=\"Pod\" name={obj.metadata.name} namespace={obj.metadata.namespace} />\n      </TableData>\n      <TableData id={columns[1].id} activeColumnIDs={activeColumnIDs}>\n        <ResourceLink kind=\"Namespace\" name={obj.metadata.namespace} />\n      </TableData>\n    </>\n  );\n};\n\ntype PodsTableProps = {\n  data: K8sResourceCommon[];\n  unfilteredData: K8sResourceCommon[];\n  loaded: boolean;\n  loadError: any;\n};\n\nconst PodsTable: React.FC<PodsTableProps> = ({ data, unfilteredData, loaded, loadError }) => {\n  return (\n    <VirtualizedTable<K8sResourceCommon>\n      data={data}\n      unfilteredData={unfilteredData}\n      loaded={loaded}\n      loadError={loadError}\n      columns={columns}\n      Row={PodRow}\n    />\n  );\n};\n\nexport const filters: RowFilter[] = [\n  {\n    filterGroupName: 'App type',\n    type: 'pod-app',\n    reducer: (pod) => (pod.metadata.name.includes('kube-scheduler') ? 'scheduler' : 'other'),\n    filter: (input, pod) => {\n      if (input.selected?.length) {\n        if (pod.metadata.name.includes('kube-scheduler')) {\n          return input.selected.includes('scheduler');\n        }\n        if (!pod.metadata.name.includes('kube-scheduler')) {\n          return input.selected.includes('other');\n        }\n      }\n      return true;\n    },\n    items: [\n      { id: 'scheduler', title: 'Scheduler pods' },\n      { id: 'other', title: 'Other pods' },\n    ],\n  },\n];\n\nconst ListPage = () => {\n  const [pods, loaded, loadError] = useK8sWatchResource<K8sResourceCommon[]>({\n    kind: 'Pod',\n    isList: true,\n    namespaced: true,\n  });\n\n  const [data, filteredData, onFilterChange] = useListPageFilter(pods, filters, {\n    name: { selected: ['openshift'] },\n  });\n\n  return (\n    <>\n      <ListPageHeader title=\"OpenShift Pods List Page\">\n        <ListPageCreate groupVersionKind=\"Pod\">Create Pod</ListPageCreate>\n      </ListPageHeader>\n      <ListPageBody>\n        <ListPageFilter\n          data={data}\n          loaded={loaded}\n          rowFilters={filters}\n          onFilterChange={onFilterChange}\n        />\n        <PodsTable\n          data={filteredData}\n          unfilteredData={data}\n          loaded={loaded}\n          loadError={loadError}\n        />\n      </ListPageBody>\n    </>\n  );\n};\n\nexport default ListPage;\n"],"names":[],"sourceRoot":""}